{"version":3,"sources":["utility/Counter.js","components/InputOperator.js","reducers/AppReducer.js","actions/app.js","components/InputPanel.js","containers/InputContainer.js","components/Embed.js","components/EmbedPanel.js","containers/EmbedContainer.js","App.js","index.js"],"names":["counter","Counter","next","current","setCurrent","n","replaceStyleWithFull","element","removeAttribute","setAttribute","makeParserReturn","platform","id","embedHtml","platformId","uid","uuidv1","layout","position","x","y","size","width","height","zIndex","twitch","facebook","youtube","parsers","Twitch","rawData","el","document","createElement","innerHTML","iframeElement","iframeElements","getElementsByTagName","length","src","getAttribute","replace","console","error","concat","Facebook","idData","unescape","substr","indexOf","Youtube","getEmbedData","type","includes","isTwitch","isFacebook","isYoutube","getType","initialEmbedListDataState","embedList","embedInputRaw","AppReducer","combineReducers","embedListData","newState","state","arguments","undefined","action","Object","objectSpread","newEmbed","processedData","InputPanel","props","addHandler","setEmbedInputRawHandler","_useState","useState","_useState2","slicedToArray","showEmbedHelp","setShowEmbedHelp","react_default","a","InputGroup","OverlayTrigger","trigger","placement","overlay","outOfBoundaries","scheduleUpdate","show","arrowProps","rest","objectWithoutProperties","Tooltip","assign","onClick","className","Form","Control","placeholder","aria-label","style","backgroundColor","color","border","flex","padding","value","onChange","evt","target","Append","Button","variant","Modal","aria-labelledby","centered","Header","closeButton","Title","Body","href","rel","textDecoration","onHide","defaultProps","InputContainer","connect","dispatch","AddEmbed","SetEmbedInputRaw","Embed","removeHandler","mouseDownHandler","setHtmlHandler","replaceHandler","setLayoutHandler","_props$embed","embed","backgroundStyle","alignItems","justifyContent","embedStyle","top","setLayout","_ref","useEffect","embedData","backgroundVisible","setBackgroundVisible","controlPanelStyle","right","textAlign","visibility","titlePanelStyle","left","paddingLeft","lineHeight","lib","lockAspectRatio","lockAspectRatioExtraHeight","onMouseOver","onMouseOut","onDragStop","e","d","onResize","direction","ref","delta","pos","newW","parseInt","newH","onMouseDown","bounds","cancel","ButtonGroup","key","delay","setTimeout","index_esm","dangerouslySetInnerHTML","__html","EmbedPanel","topHandler","allEmbedData","keys","map","Embed_Embed","EmbedContainer","RemoveEmbed","TopEmbed","SetEmbedHtml","ReplaceEmbed","SetEmbedLayout","App","store","createStore","ReactDOM","render","es","src_App","getElementById"],"mappings":"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","file":"static/js/main.a08da2d2.chunk.js","sourcesContent":["// cross file global counter\r\n\r\nlet counter = 0\r\nexport const Counter = {\r\n  next: () => {\r\n    counter += 1;\r\n    //console.log(`counter.next: ${counter}`);\r\n    return counter;\r\n  },\r\n  current: () => {\r\n    //console.log(`counter.current: ${counter}`);\r\n    return counter;\r\n  },\r\n  setCurrent: (n) => {\r\n    counter = n;\r\n    return counter;\r\n  }\r\n}\r\n\r\nexport default Counter","import uuidv1 from 'uuid/v1'\r\nimport Counter from 'utility/Counter'\r\n\r\nconst isTwitch = (rawData) => {\r\n  return rawData.includes(\"https://player.twitch.tv/?channel=\")\r\n}\r\n\r\nconst isFacebook = (rawData) => {\r\n  return rawData.includes(\"https://www.facebook.com/plugins/video.php?\")\r\n}\r\n\r\nconst isYoutube = (rawData) => {\r\n  return rawData.includes(\"https://www.youtube.com/embed/\")\r\n}\r\n\r\nconst replaceStyleWithFull = (element) => {\r\n  element.removeAttribute(\"height\");\r\n  element.removeAttribute(\"width\");\r\n  element.setAttribute(\"style\", \"width:100%;height:100%\");\r\n  return\r\n}\r\n\r\nconst makeParserReturn = (platform, id, embedHtml) => {\r\n  return {\r\n    platform: platform,\r\n    platformId: id,\r\n    embedHtml: embedHtml,\r\n    uid: uuidv1(),\r\n    layout: {\r\n      position: {\r\n        x: 100,\r\n        y: 100\r\n      },\r\n      size: {\r\n        width: 1920 * 0.5,\r\n        height: 1080 * 0.5\r\n      },\r\n      zIndex: Counter.next()\r\n    }\r\n  }\r\n}\r\n\r\nconst twitchParser = (rawData) => {\r\n  let el = document.createElement( 'div' );\r\n  el.innerHTML = rawData;\r\n  let iframeElements = el.getElementsByTagName(\"iframe\");\r\n  let iframeElement;\r\n  if (iframeElements.length === 1) {\r\n    iframeElement = iframeElements[0];\r\n  } \r\n  else {\r\n    console.error(`invalid twitch rawData: ${rawData}`);\r\n    return\r\n  }\r\n  replaceStyleWithFull(iframeElement);\r\n\r\n  let src = iframeElement.getAttribute(\"src\");\r\n  src = src.replace(\"www.example.com\" ,\"peefly.github.io\")\r\n  let id = src.replace(\"https://player.twitch.tv/?channel=\", \"\");\r\n  return makeParserReturn(twitch, id, el.innerHTML);\r\n  //return el.innerHTML;\r\n}\r\n\r\nconst facebookParser = (rawData) => {\r\n  let el = document.createElement( 'div' );\r\n  el.innerHTML = rawData;\r\n\r\n  let iframeElements = el.getElementsByTagName(\"iframe\");\r\n  let iframeElement;\r\n  if (iframeElements.length === 1) {\r\n    iframeElement = iframeElements[0];\r\n  } \r\n  else {\r\n    console.error(`invalid facebook rawData: ${rawData}`);\r\n    return\r\n  }\r\n  replaceStyleWithFull(iframeElement);\r\n\r\n  let src = iframeElement.getAttribute(\"src\");\r\n  let idData = src.replace(\"https://www.facebook.com/plugins/video.php?href=\", \"\");\r\n  idData = idData.replace(\"&show_text=0&width=560\", \"\");\r\n  idData = unescape(idData);\r\n  idData = idData.replace(\"https://www.facebook.com/\", \"\");\r\n  let id = idData.substr(0, idData.indexOf(\"/\"));\r\n  return makeParserReturn(facebook, id, el.innerHTML);\r\n  //return el.innerHTML;\r\n}\r\n\r\nconst youtubeParser = (rawData) => {\r\n  let el = document.createElement( 'div' );\r\n  el.innerHTML = rawData;\r\n\r\n  let iframeElements = el.getElementsByTagName(\"iframe\");\r\n  let iframeElement;\r\n  if (iframeElements.length === 1) {\r\n    iframeElement = iframeElements[0];\r\n  } \r\n  else {\r\n    console.error(`invalid facebook rawData: ${rawData}`);\r\n    return\r\n  }\r\n  replaceStyleWithFull(iframeElement);\r\n\r\n  let src = iframeElement.getAttribute(\"src\");\r\n  let id = src.replace(\"https://www.youtube.com/embed/\", \"\");\r\n  return makeParserReturn(youtube, id, el.innerHTML);\r\n  //return el.innerHTML;\r\n}\r\n\r\nconst [twitch, facebook, youtube, unknown] = [\"Twitch\", \"Facebook\", \"Youtube\", \"Unknown\"];\r\n\r\nconst getType = (rawData) => {\r\n  if (isTwitch(rawData)) {\r\n    return twitch;\r\n  }\r\n  else if (isFacebook(rawData)) {\r\n    return facebook;\r\n  }\r\n  else if (isYoutube(rawData)) {\r\n    return youtube;\r\n  }\r\n  console.error(\"unknown input rawData\");\r\n  return unknown;\r\n}\r\n\r\nconst parsers = {\r\n  Twitch: twitchParser,\r\n  Facebook: facebookParser,\r\n  Youtube: youtubeParser,\r\n}\r\n\r\n\r\nexport const getEmbedData = (rawData) => {\r\n  let type = getType(rawData);\r\n  if (type === unknown) {\r\n    return;\r\n  }\r\n  return parsers[type](rawData);\r\n}","import { ADD_EMBED, REMOVE_EMBED, TOP_EMBED, SET_EMBED_HTML, SET_EMBED_INPUT_RAW, REPLACE_EMBED, SET_EMBED_LAYOUT } from 'actions/app'\r\nimport { combineReducers } from 'redux'\r\nimport Counter from 'utility/Counter'\r\nimport { getEmbedData } from 'components/InputOperator'\r\n\r\nconst defaultEmbedInputRaw = '';\r\n// debug default\r\n//const defaultEmbedInputRaw = '<iframe src=\"https://player.twitch.tv/?channel=qttsix\" frameborder=\"0\" allowfullscreen=\"true\" scrolling=\"no\" height=\"378\" width=\"620\"></iframe><a href=\"https://www.twitch.tv/qttsix?tt_content=text_link&tt_medium=live_embed\" style=\"padding:2px 0px 4px; display:block; width:345px; font-weight:normal; font-size:10px; text-decoration:underline;\">在 www.twitch.tv 觀賞 六希夫 的實況影片</a>';\r\nexport const initialEmbedListDataState = {\r\n  embedList: {},\r\n  embedInputRaw: defaultEmbedInputRaw\r\n}\r\n\r\nconst embedListData = (state=initialEmbedListDataState, action) => {\r\n  let newState;\r\n  //console.log(`embedListData action: ${JSON.stringify(action)}`);\r\n  //console.log(`embedListData state: ${JSON.stringify(state)}`);\r\n  switch (action.type) {\r\n    case ADD_EMBED:\r\n      newState = {...state}\r\n      newState.embedList[action.newEmbed.uid] = action.newEmbed;\r\n      return newState\r\n    case REMOVE_EMBED:\r\n      newState = {...state}\r\n      delete newState.embedList[action.uid];\r\n      return newState\r\n    case TOP_EMBED:\r\n      newState = {...state}\r\n      newState.embedList[action.uid].layout.zIndex = Counter.next();\r\n      return newState\r\n    case SET_EMBED_HTML:\r\n      newState = {...state}\r\n      newState.embedList[action.uid].embedHtml = action.embedHtml;\r\n      return newState\r\n    case SET_EMBED_INPUT_RAW:\r\n      newState = {...state}\r\n      newState.embedInputRaw = action.embedInputRaw;\r\n      return newState\r\n    case REPLACE_EMBED:\r\n      newState = {...state}\r\n      const processedData = getEmbedData(state.embedInputRaw);\r\n      processedData.layout = newState.embedList[action.uid].layout;\r\n      delete newState.embedList[action.uid]\r\n      newState.embedList[processedData.uid] = processedData;\r\n      return newState\r\n    case SET_EMBED_LAYOUT:\r\n      newState = {...state}\r\n      newState.embedList[action.uid]['layout'] = action.layout;\r\n      return newState\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const AppReducer = combineReducers({\r\n  embedListData\r\n})\r\n","export const ADD_EMBED = \"ADD_EMBED\";\r\nexport const REMOVE_EMBED = \"REMOVE_EMBED\";\r\nexport const TOP_EMBED = \"TOP_EMBED\";\r\nexport const SET_EMBED_HTML = \"SET_EMBED_HTML\";\r\nexport const SET_EMBED_INPUT_RAW = \"SET_EMBED_INPUT_RAW\";\r\nexport const REPLACE_EMBED = \"REPLACE_EMBED\";\r\nexport const SET_EMBED_LAYOUT = \"SET_EMBED_LAYOUT\";\r\n\r\nexport const AddEmbed = (newEmbed) => {\r\n  const action = {\r\n    type: ADD_EMBED,\r\n    newEmbed: newEmbed\r\n  }\r\n  return action;\r\n}\r\n\r\nexport const RemoveEmbed = (uid) => {\r\n  const action = {\r\n    type: REMOVE_EMBED,\r\n    uid: uid\r\n  }\r\n  return action;\r\n}\r\n\r\nexport const TopEmbed = (uid) => {\r\n  const action = {\r\n    type: TOP_EMBED,\r\n    uid: uid\r\n  }\r\n  return action;\r\n}\r\n\r\nexport const SetEmbedHtml = (uid, embedHtml) => {\r\n  const action = {\r\n    type: SET_EMBED_HTML,\r\n    uid: uid,\r\n    embedHtml: embedHtml\r\n  }\r\n  return action;\r\n}\r\n\r\nexport const SetEmbedInputRaw = (embedInputRaw) => {\r\n  const action = {\r\n    type: SET_EMBED_INPUT_RAW,\r\n    embedInputRaw: embedInputRaw\r\n  }\r\n  return action;\r\n}\r\n\r\nexport const ReplaceEmbed = (uid) => {\r\n  const action = {\r\n    type: REPLACE_EMBED,\r\n    uid: uid\r\n  }\r\n  return action;\r\n}\r\n\r\nexport const SetEmbedLayout = (uid, layout) => {\r\n  const action = {\r\n    type: SET_EMBED_LAYOUT,\r\n    uid: uid,\r\n    layout: layout\r\n  }\r\n  return action;\r\n}","import React, {useState} from 'react'\r\nimport { Button, InputGroup, Form, OverlayTrigger, Modal, Tooltip } from 'react-bootstrap';\r\nimport { getEmbedData } from './InputOperator'\r\nimport { initialEmbedListDataState } from 'reducers/AppReducer'\r\nimport './InputPanel.scss'\r\n\r\nexport const InputPanel = (props) => {\r\n  const { embedListData, addHandler, setEmbedInputRawHandler } = props\r\n  const onInputChange = (evt) => setEmbedInputRawHandler(evt.target.value);\r\n  const onAddClick = () => {\r\n    if (embedListData.embedInputRaw === \"\") return;\r\n    let processedData = getEmbedData(embedListData.embedInputRaw);\r\n    addHandler(processedData);\r\n    //clearInput();\r\n  }\r\n  const clearInput = () => setEmbedInputRawHandler(\"\");\r\n  const inputStyle = {\r\n    backgroundColor: \"#333\",\r\n    color: \"#aaa\",\r\n    border: \"0px solid #fff\",\r\n    width: 60,\r\n    flex: \"none\",\r\n    padding: \"4px\",\r\n  }\r\n\r\n  const [showEmbedHelp, setShowEmbedHelp] = useState(false);\r\n\r\n  const EmbedHelpModal = (props) => {\r\n    return (\r\n      <Modal {...props} size=\"sm\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            嵌入碼取得方式\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>\r\n            <strong style={{color: \"#B200FF\"}}>Twitch</strong><br />\r\n            <span>[實況右下角分享] → [嵌入] → [使用 iframe]</span>\r\n          </p>\r\n          <p>\r\n            <strong>\r\n              <a href=\"https://www.facebook.com/help/1570724596499071\" target=\"_blank\" \r\n                rel=\"noopener noreferrer\" style={{color: \"#0023FF\", textDecoration: \"underline\"}}>\r\n                Facebook\r\n              </a>\r\n            </strong><br />\r\n            <span>[實況右上角小鈴鐺旁三點] → [嵌入]</span>\r\n          </p>\r\n          <p>\r\n            <strong>\r\n              <a href=\"https://support.google.com/youtube/answer/171780\" target=\"_blank\" \r\n                rel=\"noopener noreferrer\" style={{color: \"#FF0000\", textDecoration: \"underline\"}}>\r\n                Youtube\r\n              </a>\r\n            </strong><br />\r\n            <span>[實況/影片右下方分享] → [嵌入]</span>\r\n          </p>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  const embedHelp = (props) => {\r\n    const {outOfBoundaries, scheduleUpdate, show, arrowProps, ...rest} = props;\r\n    return (<Tooltip {...rest} onClick={()=>setShowEmbedHelp(true)} className=\"linkStyle\">\r\n              取得方式\r\n            </Tooltip>)\r\n  };\r\n\r\n  return (\r\n    <InputGroup>\r\n      <OverlayTrigger trigger=\"focus\" placement=\"bottom\" overlay={embedHelp}>\r\n        <Form.Control\r\n          placeholder=\"嵌入碼\" aria-label=\"嵌入碼\" size=\"sm\" style={inputStyle}\r\n          value={embedListData.embedInputRaw} onChange={onInputChange} />\r\n      </OverlayTrigger>\r\n      <InputGroup.Append>\r\n        <Button variant=\"dark\" size=\"sm\" onClick={clearInput}>清除</Button>\r\n        <Button variant=\"dark\" size=\"sm\" onClick={onAddClick}>加入</Button>\r\n      </InputGroup.Append>\r\n      <EmbedHelpModal\r\n                show={showEmbedHelp}\r\n                onHide={() => setShowEmbedHelp(false)}\r\n              />\r\n    </InputGroup>\r\n  );\r\n}\r\n\r\nInputPanel.defaultProps = initialEmbedListDataState","import { connect } from 'react-redux'\r\nimport { InputPanel } from 'components/InputPanel'\r\nimport { AddEmbed, SetEmbedInputRaw } from 'actions/app'\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    embedListData: state.embedListData\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addHandler: (newEmbed) => {\r\n      dispatch(AddEmbed(newEmbed));\r\n    },\r\n    setEmbedInputRawHandler: (embedInputRaw) => {\r\n      dispatch(SetEmbedInputRaw(embedInputRaw));\r\n    }\r\n  }\r\n}\r\n\r\nexport const InputContainer = connect(\r\n  mapStateToProps, mapDispatchToProps\r\n)(InputPanel)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { FaArrowAltCircleDown, FaSyncAlt, FaTimes } from 'react-icons/fa'\r\nimport { Rnd } from \"react-rnd\";\r\nimport { Button, OverlayTrigger, Tooltip, ButtonGroup } from 'react-bootstrap'\r\nimport './Embed.scss';\r\n\r\nexport const Embed = (props) => {\r\n  const {removeHandler, mouseDownHandler, setHtmlHandler, replaceHandler, setLayoutHandler} = props;\r\n  const {platform, platformId, embedHtml, uid, layout} = props.embed;\r\n  const createMarkup = (embedData) => {return {__html: embedData}}\r\n\r\n  const controlPanelHeight = 32;\r\n  \r\n  let backgroundStyle = {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    border: \"solid 0px #aaa\",\r\n    backgroundColor: \"#222\",\r\n    zIndex: layout.zIndex,\r\n  };\r\n  \r\n  let embedStyle = {\r\n    top: controlPanelHeight, \r\n    backgroundColor: \"#222\", \r\n    position: \"absolute\",\r\n    ...layout.size\r\n  }\r\n\r\n  const setLayout = ({x, y, width, height}) => {\r\n    //let newLayout = {...layout};\r\n    layout.size = {width, height};\r\n    layout.position = {x, y};\r\n    setLayoutHandler(uid, layout);\r\n  }\r\n\r\n  useEffect(() => {\r\n    //console.log(`layout: ${JSON.stringify(layout)}`);\r\n  })\r\n  \r\n  \r\n  const [backgroundVisible, setBackgroundVisible] = useState(false);\r\n  \r\n\r\n  let controlPanelStyle = {\r\n    height: controlPanelHeight,\r\n    right: \"0px\",\r\n    position: \"absolute\",\r\n    backgroundColor: \"#222\",\r\n    color: \"#fff\",\r\n    border: \"solid 0px #aaa\",\r\n    alignItems: \"right\",\r\n    textAlign: \"right\",\r\n    visibility: backgroundVisible?\"visible\":\"hidden\",\r\n  }\r\n  let titlePanelStyle = {\r\n    height: controlPanelHeight,\r\n    left: \"0px\",\r\n    position: \"absolute\",\r\n    backgroundColor: \"#222\",\r\n    color: \"#fff\",\r\n    border: \"solid 0px #aaa\",\r\n    alignItems: \"left\",\r\n    textAlign: \"left\",\r\n    visibility: backgroundVisible?\"visible\":\"hidden\",\r\n    paddingLeft: 10,\r\n    lineHeight: `${controlPanelHeight}px`\r\n  }\r\n\r\n  const resizeHandler = (e, direction, ref, delta, pos) => {\r\n    let newW = parseInt(ref.style.width, 10);\r\n    let newH = parseInt(ref.style.height, 10) - controlPanelHeight;\r\n    setLayout({width: newW, height: newH, ...pos})\r\n  }\r\n  const refresh = () => {\r\n    setHtmlHandler(uid, \"\");\r\n    setTimeout(setHtmlHandler, 0, uid, embedHtml)\r\n  }\r\n  const replace = () => {\r\n    setHtmlHandler(uid, \"\");\r\n    setTimeout(replaceHandler, 0, uid)\r\n  }\r\n\r\n  if (backgroundVisible) {\r\n    backgroundStyle.backgroundColor = \"#222\";\r\n  } else {\r\n    backgroundStyle.backgroundColor = \"rgba(0,0,0,0)\";\r\n  }\r\n  \r\n  return (\r\n    <Rnd\r\n      style={backgroundStyle}\r\n      lockAspectRatio={embedStyle.width/embedStyle.height}\r\n      lockAspectRatioExtraHeight={controlPanelHeight}\r\n      onMouseOver={()=>setBackgroundVisible(true)}\r\n      onMouseOut={()=>setBackgroundVisible(false)}\r\n      position={layout.position}\r\n      size={{\r\n        width: layout.size.width, \r\n        height: layout.size.height + controlPanelHeight\r\n      }}\r\n      onDragStop={(e, d) => { setLayout({...layout.size, ...d}) }}\r\n      onResize={resizeHandler}\r\n      onMouseDown={()=>mouseDownHandler(uid)}\r\n      bounds=\"window\"\r\n      cancel=\".controlPanel\"\r\n    >\r\n      <div className=\"titlePanel\" style={titlePanelStyle}>\r\n        {platformId} - {platform} ({uid})\r\n      </div>\r\n      <div className=\"controlPanel\" style={controlPanelStyle}>\r\n        <ButtonGroup>\r\n          <OverlayTrigger key=\"replace\" placement=\"bottom\" delay=\"500\" overlay={<Tooltip>取代</Tooltip>}>\r\n            <Button variant=\"dark\" size=\"sm\" onClick={replace}><FaArrowAltCircleDown /></Button>\r\n          </OverlayTrigger>\r\n          <OverlayTrigger key=\"refresh\" placement=\"bottom\" delay=\"500\" overlay={<Tooltip>重整</Tooltip>}>\r\n            <Button variant=\"dark\" size=\"sm\" onClick={refresh}><FaSyncAlt /></Button>\r\n          </OverlayTrigger>\r\n          <OverlayTrigger key=\"close\" placement=\"bottom\" delay=\"500\" overlay={<Tooltip>關閉</Tooltip>}>\r\n            <Button variant=\"dark\" size=\"sm\" onClick={()=>removeHandler(uid)}><FaTimes /></Button>\r\n          </OverlayTrigger>\r\n        </ButtonGroup>\r\n      </div> \r\n      { true &&\r\n        <div style={embedStyle} dangerouslySetInnerHTML={createMarkup(embedHtml)} />\r\n      }\r\n      { false && // placeholder for debug\r\n        <div style={embedStyle} />\r\n      }\r\n      \r\n    </Rnd>\r\n    \r\n\r\n    \r\n  );\r\n}","import React from 'react'\r\nimport { Embed } from './Embed'\r\nimport { initialEmbedListDataState } from 'reducers/AppReducer'\r\n\r\nexport const EmbedPanel = ({\r\n  embedListData, removeHandler, topHandler, \r\n  setHtmlHandler, replaceHandler, setLayoutHandler}) => {\r\n  let allEmbedData = Object.keys(embedListData.embedList).map(key => {\r\n    let result = <Embed key={key} embed={embedListData.embedList[key]} \r\n                    removeHandler={removeHandler} mouseDownHandler={topHandler} \r\n                    setHtmlHandler={setHtmlHandler} replaceHandler={replaceHandler} \r\n                    setLayoutHandler={setLayoutHandler}/>;\r\n    return result\r\n  });\r\n  return (\r\n    <div>{allEmbedData}</div>\r\n  );\r\n}\r\n\r\nEmbedPanel.defaultProps = {\r\n  embedListData: initialEmbedListDataState\r\n}\r\n","import { connect } from 'react-redux'\r\nimport { EmbedPanel } from 'components/EmbedPanel.js'\r\nimport { RemoveEmbed, TopEmbed, SetEmbedHtml, ReplaceEmbed, SetEmbedLayout } from 'actions/app'\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    embedListData: state.embedListData\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    removeHandler: (uid) => {\r\n      dispatch(RemoveEmbed(uid));\r\n    },\r\n    topHandler: (uid) => {\r\n      dispatch(TopEmbed(uid));\r\n    },\r\n    setHtmlHandler: (uid, embedHtml) => {\r\n      dispatch(SetEmbedHtml(uid, embedHtml));\r\n    },\r\n    replaceHandler: (uid) => {\r\n      dispatch(ReplaceEmbed(uid));\r\n    },\r\n    setLayoutHandler: (uid, layout) => {\r\n      dispatch(SetEmbedLayout(uid, layout));\r\n    }\r\n  }\r\n}\r\n\r\nexport const EmbedContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EmbedPanel)\r\n","import React from 'react';\nimport './App.scss';\nimport { InputContainer } from './containers/InputContainer'\nimport { EmbedContainer } from './containers/EmbedContainer'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"InputContainer\">\n        <InputContainer />\n      </div>\n      <div className=\"EmbedContainer\">\n        <EmbedContainer />\n      </div>\n    </div>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.scss';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport { AppReducer } from './reducers/AppReducer'\n\nlet store = createStore(AppReducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , \n  document.getElementById('root')\n);\n"],"sourceRoot":""}