{"version":3,"sources":["utility/counter.js","components/InputOperator.js","reducers/AppReducer.js","actions/app.js","components/InputPanel.js","containers/InputContainer.js","components/Embed.js","components/EmbedPanel.js","containers/EmbedContainer.js","App.js","index.js"],"names":["counter","Counter","next","current","setCurrent","n","replaceStyleWithFull","element","removeAttribute","setAttribute","makeParserReturn","platform","id","embedHtml","platformId","uid","uuidv1","layout","position","x","y","size","width","height","zIndex","twitch","facebook","youtube","parsers","Twitch","rawData","el","document","createElement","innerHTML","linkElements","getElementsByTagName","length","remove","iframeElement","iframeElements","getAttribute","replace","console","error","concat","Facebook","idData","unescape","substr","indexOf","Youtube","getEmbedData","type","includes","isTwitch","isFacebook","isYoutube","getType","initialEmbedListDataState","embedList","embedInputRaw","AppReducer","combineReducers","embedListData","newState","state","arguments","undefined","action","Object","objectSpread","newEmbed","processedData","InputPanel","props","addHandler","setEmbedInputRawHandler","react_default","a","InputGroup","className","Form","Control","placeholder","aria-label","style","backgroundColor","color","border","value","onChange","evt","target","Append","Button","variant","onClick","defaultProps","InputContainer","connect","dispatch","AddEmbed","SetEmbedInputRaw","Embed","removeHandler","mouseDownHandler","setHtmlHandler","replaceHandler","setLayoutHandler","_props$embed","embed","backgroundStyle","alignItems","justifyContent","embedStyle","top","setLayout","_ref","useEffect","embedData","_useState","useState","_useState2","slicedToArray","backgroundVisible","setBackgroundVisible","controlPanelStyle","right","textAlign","visibility","titlePanelStyle","left","paddingLeft","lineHeight","lib","lockAspectRatio","lockAspectRatioExtraHeight","onMouseOver","onMouseOut","onDragStop","e","d","onResize","direction","ref","delta","pos","newW","parseInt","newH","onMouseDown","bounds","cancel","ButtonGroup","OverlayTrigger","key","placement","overlay","Tooltip","setTimeout","index_esm","dangerouslySetInnerHTML","__html","EmbedPanel","topHandler","allEmbedData","keys","map","Embed_Embed","EmbedContainer","RemoveEmbed","TopEmbed","SetEmbedHtml","ReplaceEmbed","SetEmbedLayout","App","store","createStore","ReactDOM","render","es","src_App","getElementById"],"mappings":"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","file":"static/js/main.d17b9c43.chunk.js","sourcesContent":["// cross file global counter\r\n\r\nlet counter = 0\r\nexport const Counter = {\r\n  next: () => {\r\n    counter += 1;\r\n    //console.log(`counter.next: ${counter}`);\r\n    return counter;\r\n  },\r\n  current: () => {\r\n    //console.log(`counter.current: ${counter}`);\r\n    return counter;\r\n  },\r\n  setCurrent: (n) => {\r\n    counter = n;\r\n    return counter;\r\n  }\r\n}\r\n\r\nexport default Counter","import uuidv1 from 'uuid/v1'\r\nimport Counter from 'utility/counter'\r\n\r\nconst isTwitch = (rawData) => {\r\n  return rawData.includes(\"https://player.twitch.tv/?channel=\")\r\n}\r\n\r\nconst isFacebook = (rawData) => {\r\n  return rawData.includes(\"https://www.facebook.com/plugins/video.php?\")\r\n}\r\n\r\nconst isYoutube = (rawData) => {\r\n  return rawData.includes(\"https://www.youtube.com/embed/\")\r\n}\r\n\r\nconst replaceStyleWithFull = (element) => {\r\n  element.removeAttribute(\"height\");\r\n  element.removeAttribute(\"width\");\r\n  element.setAttribute(\"style\", \"width:100%;height:100%\");\r\n  return\r\n}\r\n\r\nconst makeParserReturn = (platform, id, embedHtml) => {\r\n  return {\r\n    platform: platform,\r\n    platformId: id,\r\n    embedHtml: embedHtml,\r\n    uid: uuidv1(),\r\n    layout: {\r\n      position: {\r\n        x: 100,\r\n        y: 100\r\n      },\r\n      size: {\r\n        width: 1920 * 0.5,\r\n        height: 1080 * 0.5\r\n      },\r\n      zIndex: Counter.next()\r\n    }\r\n  }\r\n}\r\n\r\nconst twitchParser = (rawData) => {\r\n  let el = document.createElement( 'div' );\r\n  el.innerHTML = rawData;\r\n  let linkElements = el.getElementsByTagName(\"a\");\r\n  let linkElement;\r\n  if (linkElements.length === 1) {\r\n    linkElement = linkElements[0];\r\n  } \r\n  else {\r\n    console.error(`invalid twitch rawData: ${rawData}`);\r\n    return\r\n  }\r\n  linkElement.remove();\r\n\r\n  let iframeElements = el.getElementsByTagName(\"iframe\");\r\n  let iframeElement;\r\n  if (iframeElements.length === 1) {\r\n    iframeElement = iframeElements[0];\r\n  } \r\n  else {\r\n    console.error(`invalid twitch rawData: ${rawData}`);\r\n    return\r\n  }\r\n  replaceStyleWithFull(iframeElement);\r\n\r\n  let src = iframeElement.getAttribute(\"src\");\r\n  let id = src.replace(\"https://player.twitch.tv/?channel=\", \"\");\r\n  return makeParserReturn(twitch, id, el.innerHTML);\r\n  //return el.innerHTML;\r\n}\r\n\r\nconst facebookParser = (rawData) => {\r\n  let el = document.createElement( 'div' );\r\n  el.innerHTML = rawData;\r\n\r\n  let iframeElements = el.getElementsByTagName(\"iframe\");\r\n  let iframeElement;\r\n  if (iframeElements.length === 1) {\r\n    iframeElement = iframeElements[0];\r\n  } \r\n  else {\r\n    console.error(`invalid facebook rawData: ${rawData}`);\r\n    return\r\n  }\r\n  replaceStyleWithFull(iframeElement);\r\n\r\n  let src = iframeElement.getAttribute(\"src\");\r\n  let idData = src.replace(\"https://www.facebook.com/plugins/video.php?href=\", \"\");\r\n  idData = idData.replace(\"&show_text=0&width=560\", \"\");\r\n  idData = unescape(idData);\r\n  idData = idData.replace(\"https://www.facebook.com/\", \"\");\r\n  let id = idData.substr(0, idData.indexOf(\"/\"));\r\n  return makeParserReturn(facebook, id, el.innerHTML);\r\n  //return el.innerHTML;\r\n}\r\n\r\nconst youtubeParser = (rawData) => {\r\n  let el = document.createElement( 'div' );\r\n  el.innerHTML = rawData;\r\n\r\n  let iframeElements = el.getElementsByTagName(\"iframe\");\r\n  let iframeElement;\r\n  if (iframeElements.length === 1) {\r\n    iframeElement = iframeElements[0];\r\n  } \r\n  else {\r\n    console.error(`invalid facebook rawData: ${rawData}`);\r\n    return\r\n  }\r\n  replaceStyleWithFull(iframeElement);\r\n\r\n  let src = iframeElement.getAttribute(\"src\");\r\n  let id = src.replace(\"https://www.youtube.com/embed/\", \"\");\r\n  return makeParserReturn(youtube, id, el.innerHTML);\r\n  //return el.innerHTML;\r\n}\r\n\r\nconst [twitch, facebook, youtube, unknown] = [\"Twitch\", \"Facebook\", \"Youtube\", \"Unknown\"];\r\n\r\nconst getType = (rawData) => {\r\n  if (isTwitch(rawData)) {\r\n    return twitch;\r\n  }\r\n  else if (isFacebook(rawData)) {\r\n    return facebook;\r\n  }\r\n  else if (isYoutube(rawData)) {\r\n    return youtube;\r\n  }\r\n  console.error(\"unknown input rawData\");\r\n  return unknown;\r\n}\r\n\r\nconst parsers = {\r\n  Twitch: twitchParser,\r\n  Facebook: facebookParser,\r\n  Youtube: youtubeParser,\r\n}\r\n\r\n\r\nexport const getEmbedData = (rawData) => {\r\n  let type = getType(rawData);\r\n  if (type === unknown) {\r\n    return;\r\n  }\r\n  return parsers[type](rawData);\r\n}","import { ADD_EMBED, REMOVE_EMBED, TOP_EMBED, SET_EMBED_HTML, SET_EMBED_INPUT_RAW, REPLACE_EMBED, SET_EMBED_LAYOUT } from 'actions/app'\r\nimport { combineReducers } from 'redux'\r\nimport Counter from 'utility/counter'\r\nimport { getEmbedData } from 'components/InputOperator'\r\n\r\nconst defaultEmbedInputRaw = '';\r\n// debug default\r\n//const defaultEmbedInputRaw = '<iframe src=\"https://player.twitch.tv/?channel=qttsix\" frameborder=\"0\" allowfullscreen=\"true\" scrolling=\"no\" height=\"378\" width=\"620\"></iframe><a href=\"https://www.twitch.tv/qttsix?tt_content=text_link&tt_medium=live_embed\" style=\"padding:2px 0px 4px; display:block; width:345px; font-weight:normal; font-size:10px; text-decoration:underline;\">在 www.twitch.tv 觀賞 六希夫 的實況影片</a>';\r\nexport const initialEmbedListDataState = {\r\n  embedList: {},\r\n  embedInputRaw: defaultEmbedInputRaw\r\n}\r\n\r\nconst embedListData = (state=initialEmbedListDataState, action) => {\r\n  let newState;\r\n  //console.log(`embedListData action: ${JSON.stringify(action)}`);\r\n  //console.log(`embedListData state: ${JSON.stringify(state)}`);\r\n  switch (action.type) {\r\n    case ADD_EMBED:\r\n      newState = {...state}\r\n      newState.embedList[action.newEmbed.uid] = action.newEmbed;\r\n      return newState\r\n    case REMOVE_EMBED:\r\n      newState = {...state}\r\n      delete newState.embedList[action.uid];\r\n      return newState\r\n    case TOP_EMBED:\r\n      newState = {...state}\r\n      newState.embedList[action.uid].layout.zIndex = Counter.next();\r\n      return newState\r\n    case SET_EMBED_HTML:\r\n      newState = {...state}\r\n      newState.embedList[action.uid].embedHtml = action.embedHtml;\r\n      return newState\r\n    case SET_EMBED_INPUT_RAW:\r\n      newState = {...state}\r\n      newState.embedInputRaw = action.embedInputRaw;\r\n      return newState\r\n    case REPLACE_EMBED:\r\n      newState = {...state}\r\n      const processedData = getEmbedData(state.embedInputRaw);\r\n      processedData.layout = newState.embedList[action.uid].layout;\r\n      delete newState.embedList[action.uid]\r\n      newState.embedList[processedData.uid] = processedData;\r\n      return newState\r\n    case SET_EMBED_LAYOUT:\r\n      newState = {...state}\r\n      newState.embedList[action.uid]['layout'] = action.layout;\r\n      return newState\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const AppReducer = combineReducers({\r\n  embedListData\r\n})\r\n","export const ADD_EMBED = \"ADD_EMBED\";\r\nexport const REMOVE_EMBED = \"REMOVE_EMBED\";\r\nexport const TOP_EMBED = \"TOP_EMBED\";\r\nexport const SET_EMBED_HTML = \"SET_EMBED_HTML\";\r\nexport const SET_EMBED_INPUT_RAW = \"SET_EMBED_INPUT_RAW\";\r\nexport const REPLACE_EMBED = \"REPLACE_EMBED\";\r\nexport const SET_EMBED_LAYOUT = \"SET_EMBED_LAYOUT\";\r\n\r\nexport const AddEmbed = (newEmbed) => {\r\n  const action = {\r\n    type: ADD_EMBED,\r\n    newEmbed: newEmbed\r\n  }\r\n  return action;\r\n}\r\n\r\nexport const RemoveEmbed = (uid) => {\r\n  const action = {\r\n    type: REMOVE_EMBED,\r\n    uid: uid\r\n  }\r\n  return action;\r\n}\r\n\r\nexport const TopEmbed = (uid) => {\r\n  const action = {\r\n    type: TOP_EMBED,\r\n    uid: uid\r\n  }\r\n  return action;\r\n}\r\n\r\nexport const SetEmbedHtml = (uid, embedHtml) => {\r\n  const action = {\r\n    type: SET_EMBED_HTML,\r\n    uid: uid,\r\n    embedHtml: embedHtml\r\n  }\r\n  return action;\r\n}\r\n\r\nexport const SetEmbedInputRaw = (embedInputRaw) => {\r\n  const action = {\r\n    type: SET_EMBED_INPUT_RAW,\r\n    embedInputRaw: embedInputRaw\r\n  }\r\n  return action;\r\n}\r\n\r\nexport const ReplaceEmbed = (uid) => {\r\n  const action = {\r\n    type: REPLACE_EMBED,\r\n    uid: uid\r\n  }\r\n  return action;\r\n}\r\n\r\nexport const SetEmbedLayout = (uid, layout) => {\r\n  const action = {\r\n    type: SET_EMBED_LAYOUT,\r\n    uid: uid,\r\n    layout: layout\r\n  }\r\n  return action;\r\n}","import React from 'react'\r\nimport { Button, InputGroup, Form } from 'react-bootstrap';\r\nimport { getEmbedData } from './InputOperator'\r\nimport { initialEmbedListDataState } from 'reducers/AppReducer'\r\n\r\nexport const InputPanel = (props) => {\r\n  const { embedListData, addHandler, setEmbedInputRawHandler } = props\r\n  const onInputChange = (evt) => setEmbedInputRawHandler(evt.target.value);\r\n  const onAddClick = () => {\r\n    if (embedListData.embedInputRaw === \"\") return;\r\n    let processedData = getEmbedData(embedListData.embedInputRaw);\r\n    addHandler(processedData);\r\n    //clearInput();\r\n  }\r\n  const clearInput = () => setEmbedInputRawHandler(\"\");\r\n  const inputStyle = {\r\n    backgroundColor: \"#333\",\r\n    color: \"#aaa\",\r\n    border: \"0px solid #fff\"\r\n  }\r\n\r\n  return (\r\n    <InputGroup className=\"mb-12\">\r\n      <Form.Control\r\n        placeholder=\"嵌入碼\" aria-label=\"嵌入碼\" size=\"sm\"  style={inputStyle}\r\n        value={embedListData.embedInputRaw} onChange={onInputChange} />\r\n      <InputGroup.Append>\r\n      <Button variant=\"dark\" size=\"sm\" onClick={clearInput}>清除</Button>\r\n          <Button variant=\"dark\" size=\"sm\" onClick={onAddClick}>加入</Button>\r\n        \r\n      </InputGroup.Append>\r\n    </InputGroup>\r\n  );\r\n}\r\n\r\nInputPanel.defaultProps = initialEmbedListDataState","import { connect } from 'react-redux'\r\nimport { InputPanel } from 'components/InputPanel'\r\nimport { AddEmbed, SetEmbedInputRaw } from 'actions/app'\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    embedListData: state.embedListData\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addHandler: (newEmbed) => {\r\n      dispatch(AddEmbed(newEmbed));\r\n    },\r\n    setEmbedInputRawHandler: (embedInputRaw) => {\r\n      dispatch(SetEmbedInputRaw(embedInputRaw));\r\n    }\r\n  }\r\n}\r\n\r\nexport const InputContainer = connect(\r\n  mapStateToProps, mapDispatchToProps\r\n)(InputPanel)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { FaArrowAltCircleDown, FaSyncAlt, FaTimes } from 'react-icons/fa'\r\nimport { Rnd } from \"react-rnd\";\r\nimport { Button, OverlayTrigger, Tooltip, ButtonGroup } from 'react-bootstrap'\r\nimport './Embed.scss';\r\n\r\nexport const Embed = (props) => {\r\n  const {removeHandler, mouseDownHandler, setHtmlHandler, replaceHandler, setLayoutHandler} = props;\r\n  const {platform, platformId, embedHtml, uid, layout} = props.embed;\r\n  const createMarkup = (embedData) => {return {__html: embedData}}\r\n\r\n  const controlPanelHeight = 32;\r\n  \r\n  let backgroundStyle = {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    border: \"solid 0px #aaa\",\r\n    backgroundColor: \"#222\",\r\n    zIndex: layout.zIndex,\r\n  };\r\n  \r\n  let embedStyle = {\r\n    top: controlPanelHeight, \r\n    backgroundColor: \"#222\", \r\n    position: \"absolute\",\r\n    ...layout.size\r\n  }\r\n\r\n  const setLayout = ({x, y, width, height}) => {\r\n    //let newLayout = {...layout};\r\n    layout.size = {width, height};\r\n    layout.position = {x, y};\r\n    setLayoutHandler(uid, layout);\r\n  }\r\n\r\n  useEffect(() => {\r\n    //console.log(`layout: ${JSON.stringify(layout)}`);\r\n  })\r\n  \r\n  \r\n  const [backgroundVisible, setBackgroundVisible] = useState(false);\r\n  \r\n\r\n  let controlPanelStyle = {\r\n    height: controlPanelHeight,\r\n    right: \"0px\",\r\n    position: \"absolute\",\r\n    backgroundColor: \"#222\",\r\n    color: \"#fff\",\r\n    border: \"solid 0px #aaa\",\r\n    alignItems: \"right\",\r\n    textAlign: \"right\",\r\n    visibility: backgroundVisible?\"visible\":\"hidden\",\r\n  }\r\n  let titlePanelStyle = {\r\n    height: controlPanelHeight,\r\n    left: \"0px\",\r\n    position: \"absolute\",\r\n    backgroundColor: \"#222\",\r\n    color: \"#fff\",\r\n    border: \"solid 0px #aaa\",\r\n    alignItems: \"left\",\r\n    textAlign: \"left\",\r\n    visibility: backgroundVisible?\"visible\":\"hidden\",\r\n    paddingLeft: 10,\r\n    lineHeight: `${controlPanelHeight}px`\r\n  }\r\n\r\n  const resizeHandler = (e, direction, ref, delta, pos) => {\r\n    let newW = parseInt(ref.style.width, 10);\r\n    let newH = parseInt(ref.style.height, 10) - controlPanelHeight;\r\n    setLayout({width: newW, height: newH, ...pos})\r\n  }\r\n  const refresh = () => {\r\n    setHtmlHandler(uid, \"\");\r\n    setTimeout(setHtmlHandler, 0, uid, embedHtml)\r\n  }\r\n  const replace = () => {\r\n    setHtmlHandler(uid, \"\");\r\n    setTimeout(replaceHandler, 0, uid)\r\n  }\r\n\r\n  if (backgroundVisible) {\r\n    backgroundStyle.backgroundColor = \"#222\";\r\n  } else {\r\n    backgroundStyle.backgroundColor = \"rgba(0,0,0,0)\";\r\n  }\r\n  \r\n  return (\r\n    <Rnd\r\n      style={backgroundStyle}\r\n      lockAspectRatio={embedStyle.width/embedStyle.height}\r\n      lockAspectRatioExtraHeight={controlPanelHeight}\r\n      onMouseOver={()=>setBackgroundVisible(true)}\r\n      onMouseOut={()=>setBackgroundVisible(false)}\r\n      position={layout.position}\r\n      size={{\r\n        width: layout.size.width, \r\n        height: layout.size.height + controlPanelHeight\r\n      }}\r\n      onDragStop={(e, d) => { setLayout({...layout.size, ...d}) }}\r\n      onResize={resizeHandler}\r\n      onMouseDown={()=>mouseDownHandler(uid)}\r\n      bounds=\"window\"\r\n      cancel=\".controlPanel\"\r\n    >\r\n      <div className=\"titlePanel\" style={titlePanelStyle}>\r\n        {platformId} - {platform} ({uid})\r\n      </div>\r\n      <div className=\"controlPanel\" style={controlPanelStyle}>\r\n        <ButtonGroup>\r\n          <OverlayTrigger key=\"replace\" placement=\"top\" overlay={<Tooltip>取代</Tooltip>}>\r\n            <Button variant=\"dark\" size=\"sm\" onClick={replace}><FaArrowAltCircleDown /></Button>\r\n          </OverlayTrigger>\r\n          <OverlayTrigger key=\"refresh\" placement=\"top\" overlay={<Tooltip>重整</Tooltip>}>\r\n            <Button variant=\"dark\" size=\"sm\" onClick={refresh}><FaSyncAlt /></Button>\r\n          </OverlayTrigger>\r\n          <OverlayTrigger key=\"close\" placement=\"top\" overlay={<Tooltip>關閉</Tooltip>}>\r\n            <Button variant=\"dark\" size=\"sm\" onClick={()=>removeHandler(uid)}><FaTimes /></Button>\r\n          </OverlayTrigger>\r\n        </ButtonGroup>\r\n      </div> \r\n      { true &&\r\n        <div style={embedStyle} dangerouslySetInnerHTML={createMarkup(embedHtml)} />\r\n      }\r\n      { false && // placeholder for debug\r\n        <div style={embedStyle} />\r\n      }\r\n      \r\n    </Rnd>\r\n    \r\n\r\n    \r\n  );\r\n}","import React from 'react'\r\nimport { Embed } from './Embed'\r\nimport { initialEmbedListDataState } from 'reducers/AppReducer'\r\n\r\nexport const EmbedPanel = ({\r\n  embedListData, removeHandler, topHandler, \r\n  setHtmlHandler, replaceHandler, setLayoutHandler}) => {\r\n  let allEmbedData = Object.keys(embedListData.embedList).map(key => {\r\n    let result = <Embed key={key} embed={embedListData.embedList[key]} \r\n                    removeHandler={removeHandler} mouseDownHandler={topHandler} \r\n                    setHtmlHandler={setHtmlHandler} replaceHandler={replaceHandler} \r\n                    setLayoutHandler={setLayoutHandler}/>;\r\n    return result\r\n  });\r\n  return (\r\n    <div>{allEmbedData}</div>\r\n  );\r\n}\r\n\r\nEmbedPanel.defaultProps = {\r\n  embedListData: initialEmbedListDataState\r\n}\r\n","import { connect } from 'react-redux'\r\nimport { EmbedPanel } from 'components/EmbedPanel.js'\r\nimport { RemoveEmbed, TopEmbed, SetEmbedHtml, ReplaceEmbed, SetEmbedLayout } from 'actions/app'\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    embedListData: state.embedListData\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    removeHandler: (uid) => {\r\n      dispatch(RemoveEmbed(uid));\r\n    },\r\n    topHandler: (uid) => {\r\n      dispatch(TopEmbed(uid));\r\n    },\r\n    setHtmlHandler: (uid, embedHtml) => {\r\n      dispatch(SetEmbedHtml(uid, embedHtml));\r\n    },\r\n    replaceHandler: (uid) => {\r\n      dispatch(ReplaceEmbed(uid));\r\n    },\r\n    setLayoutHandler: (uid, layout) => {\r\n      dispatch(SetEmbedLayout(uid, layout));\r\n    }\r\n  }\r\n}\r\n\r\nexport const EmbedContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EmbedPanel)\r\n","import React from 'react';\nimport './App.scss';\nimport { InputContainer } from './containers/InputContainer'\nimport { EmbedContainer } from './containers/EmbedContainer'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"InputContainer\">\n        <InputContainer />\n      </div>\n      <div className=\"EmbedContainer\">\n        <EmbedContainer />\n      </div>\n      \n    </div>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.scss';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport { AppReducer } from './reducers/AppReducer'\n\nlet store = createStore(AppReducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , \n  document.getElementById('root')\n);\n"],"sourceRoot":""}